#!/bin/bash -e

# Set log levels
LOG_LEVEL_NONE=0
LOG_LEVEL_ERROR=1
LOG_LEVEL_WARNING=2
LOG_LEVEL_INFO=3
LOG_LEVEL_DEBUG=4
LOG_LEVEL_TRACE=5

# Default log level if CONTAINER_LOG_LEVEL is not set
log_level=${CONTAINER_LOG_LEVEL:-${LOG_LEVEL_INFO}}

# Get the function to call (error, warning, info, debug, trace, level)
call=$1
if [[ ! "$call" =~ ^(error|warning|info|debug|trace|level)$ ]]; then
    echo "Error: Function $call not found"
    echo "Allowed functions are: error, warning, info, debug, trace, level"
    echo "usage example: log-helper info 'hello!'"
    exit 1
fi

# Function to print logs
print_log() {
    local level_text=$1
    local message=$2
    local date=$(date +"%Y-%m-%d %T")

    while IFS= read -r line; do
        echo "*** ${level_text} | ${date} | ${line}"
    done <<< "$message"
}

# General function to handle logging
log_message() {
    local level=$1
    local level_text=$2
    shift 2
    local echo_param=""
    local echo_msg="$@"

    if [[ "$1" =~ ^(-e|-n|-E)$ ]]; then
        echo_param=$1
        shift
        echo_msg="$@"
    fi

    [[ -n "$echo_msg" ]] || read -r echo_msg

    if [ $log_level -ge $level ]; then
        echo $echo_param "$(print_log "$level_text" "$echo_msg")"
    fi
}

error() {
    log_message $LOG_LEVEL_ERROR " ERROR " "$@"
}

warning() {
    log_message $LOG_LEVEL_WARNING "WARNING" "$@"
}

info() {
    log_message $LOG_LEVEL_INFO " INFO  " "$@"
}

debug() {
    log_message $LOG_LEVEL_DEBUG " DEBUG " "$@"
}

trace() {
    log_message $LOG_LEVEL_TRACE " TRACE " "$@"
}

# Function to compare log levels
level() {
    local operator=$1
    local loglevel_str=${2^^} # Convert to uppercase

    if [[ ! "$operator" =~ ^(eq|ne|gt|ge|lt|le)$ ]]; then
        echo "Error: Operator $operator not allowed"
        echo "Allowed operators are: eq, ne, gt, ge, lt, le"
        echo "Help: http://www.tldp.org/LDP/abs/html/comparison-ops.html"
        exit 1
    fi

    if [ -z "$loglevel_str" ]; then
        echo "Error: No log level provided"
        echo "Allowed log levels are: none, error, warning, info, debug, trace"
        echo "usage example: log-helper level eq info"
        exit 1
    fi

    local log_level_var=LOG_LEVEL_$loglevel_str
    if [ $log_level -$operator ${!log_level_var} ]; then
        exit 0
    else
        exit 1
    fi
}

shift
$call "$@"
